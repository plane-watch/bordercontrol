FROM ghcr.io/plane-watch/pw-pipeline:pw_ingest as pipeline

FROM debian:bookworm-20231120-slim

ARG S6_OVERLAY_VERSION=3.1.6.0

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

RUN set -x && \
    TEMP_PACKAGES=() && \
    KEPT_PACKAGES=() && \
    TEMP_PACKAGES+=(curl) && \
    TEMP_PACKAGES+=(git) && \
    TEMP_PACKAGES+=(file) && \
    KEPT_PACKAGES+=(ca-certificates) && \
    KEPT_PACKAGES+=(procps) && \
    KEPT_PACKAGES+=(iproute2) && \
    KEPT_PACKAGES+=(xz-utils) && \
    # readsb
    TEMP_PACKAGES+=(librrd-dev) && \
    TEMP_PACKAGES+=(libprotobuf-c-dev) && \
    KEPT_PACKAGES+=(protobuf-c-compiler) && \
    TEMP_PACKAGES+=(libncurses5-dev) && \
    TEMP_PACKAGES+=(libusb-1.0-0-dev) && \
    TEMP_PACKAGES+=(build-essential) && \
    TEMP_PACKAGES+=(cmake) && \
    TEMP_PACKAGES+=(debhelper) && \
    TEMP_PACKAGES+=(pkg-config) && \
    TEMP_PACKAGES+=(fakeroot) && \
    KEPT_PACKAGES+=(libncurses6) && \
    KEPT_PACKAGES+=(libprotobuf-c1) && \
    # ------
    apt-get update && \
    apt-get install -y --no-install-recommends \
        "${KEPT_PACKAGES[@]}" \
        "${TEMP_PACKAGES[@]}" \
        && \
    # readsb-protobuf
    git clone \
        -b v4.0.2 \
        --depth 1 \
        --single-branch \
        https://github.com/Mictronics/readsb-protobuf.git \
        /src/readsb-protobuf \
        && \
    pushd /src/readsb-protobuf && \
    make && \
    cp -v ./readsb /usr/local/bin/readsb && \
    cp -v ./viewadsb /usr/local/bin/viewadsb && \
    popd && \
    # deploy healthchecks framework
    git clone \
      --depth=1 \
      https://github.com/mikenye/docker-healthchecks-framework.git \
      /opt/healthchecks-framework \
      && \
    rm -rf \
      /opt/healthchecks-framework/.git* \
      /opt/healthchecks-framework/*.md \
      /opt/healthchecks-framework/tests \
      && \
    # Clean up
    apt-get remove -y "${TEMP_PACKAGES[@]}" && \
    apt-get autoremove -y && \
    rm -rf /src/* /tmp/* /var/lib/apt/lists/*

COPY --from=pipeline /app/pw_ingest /usr/local/bin/pw_ingest
COPY pw-feed-in/rootfs/ /

# Deploy s6 overlay
ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp
RUN tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz
ADD https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp
RUN tar -C / -Jxpf /tmp/s6-overlay-x86_64.tar.xz

# Configure s6 overlay
ENV S6_LOGGING=0 \
    S6_VERBOSITY=1

# Set defaults
ENV PW_INGEST_INPUT_MODE=listen \
    PW_INGEST_INPUT_PROTO=beast \
    PW_INGEST_INPUT_ADDR=0.0.0.0 \
    PW_INGEST_INPUT_PORT=12345

# Set s6 init as entrypoint
ENTRYPOINT [ "/init" ]

HEALTHCHECK --interval=300s --timeout=40s --start-period=600s --retries=5 CMD /scripts/healthcheck.sh
